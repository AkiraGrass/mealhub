services:
  app:
    # If you already have a Dockerfile for PHP-FPM, point to it here.
    # Otherwise, keep using php:8.3-fpm and install needed extensions in your Dockerfile.
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
    image: php:8.2-fpm-alpine
    
    working_dir: /var/www/html
    volumes:
      - ./src/mealhub:/var/www/html
    environment:
      # These are typical Laravel envs; ensure your .env matches
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: http://localhost
      # Mail: route to MailHog by default
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
    networks:
      - mealhub_net
    depends_on:
      - db
      - redis

  scheduler:
    # Reuse the same PHP image/build as app for artisan scheduler
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
    image: php:8.2-fpm-alpine
    
    working_dir: /var/www/html
    command: php artisan schedule:work
    volumes:
      - ./src/mealhub:/var/www/html
    restart: unless-stopped
    networks:
      - mealhub_net
    depends_on:
      - app
      - db

  nginx:
    image: nginx:1.25-alpine
    
    ports:
      - "8080:80" 
      - "80:80"
    volumes:
      - ./src/mealhub/public:/var/www/html/public:ro
      - ./docker/nginx:/etc/nginx/conf.d:ro
    depends_on:
      - app
    networks:
      - mealhub_net

  db:
    image: postgres:16-alpine
    
    environment:
      POSTGRES_DB: mealhub
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mealhub_net
      
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"]
    ports:
      - "6379:6379"   # 本機要連再開，僅容器內用可省略
    networks:
      - mealhub_net
    restart: unless-stopped

  mailhog:
    image: axllent/mailpit:latest
    
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - mealhub_net

  loki:
    image: grafana/loki:2.9.5
    
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./docker/monitoring/loki:/etc/loki:ro
    ports:
      - "3100:3100"
    networks:
      - mealhub_net

  promtail:
    image: grafana/promtail:2.9.5
    
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./docker/monitoring/promtail/config.yml:/etc/promtail/config.yml:ro
      - ./src/mealhub/storage/logs:/var/log/laravel:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - mealhub_net
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:11.0.0
    
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - mealhub_net
    depends_on:
      - loki

volumes:
  db-data:
  grafana-data:

networks:
  mealhub_net:
    driver: bridge
